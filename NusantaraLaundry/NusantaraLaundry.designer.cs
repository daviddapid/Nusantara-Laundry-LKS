#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NusantaraLaundry
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NusantaraLaundry")]
	public partial class NusantaraLaundryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDetailPaket(DetailPaket instance);
    partial void UpdateDetailPaket(DetailPaket instance);
    partial void DeleteDetailPaket(DetailPaket instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertDetailTransaksi(DetailTransaksi instance);
    partial void UpdateDetailTransaksi(DetailTransaksi instance);
    partial void DeleteDetailTransaksi(DetailTransaksi instance);
    partial void InsertJabatan(Jabatan instance);
    partial void UpdateJabatan(Jabatan instance);
    partial void DeleteJabatan(Jabatan instance);
    partial void InsertKategori(Kategori instance);
    partial void UpdateKategori(Kategori instance);
    partial void DeleteKategori(Kategori instance);
    partial void InsertLayanan(Layanan instance);
    partial void UpdateLayanan(Layanan instance);
    partial void DeleteLayanan(Layanan instance);
    partial void InsertPaket(Paket instance);
    partial void UpdatePaket(Paket instance);
    partial void DeletePaket(Paket instance);
    partial void InsertPegawai(Pegawai instance);
    partial void UpdatePegawai(Pegawai instance);
    partial void DeletePegawai(Pegawai instance);
    partial void InsertPelanggan(Pelanggan instance);
    partial void UpdatePelanggan(Pelanggan instance);
    partial void DeletePelanggan(Pelanggan instance);
    partial void InsertTransaksi(Transaksi instance);
    partial void UpdateTransaksi(Transaksi instance);
    partial void DeleteTransaksi(Transaksi instance);
    #endregion
		
		public NusantaraLaundryDataContext() : 
				base(global::NusantaraLaundry.Properties.Settings.Default.NusantaraLaundryConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NusantaraLaundryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NusantaraLaundryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NusantaraLaundryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NusantaraLaundryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DetailPaket> DetailPakets
		{
			get
			{
				return this.GetTable<DetailPaket>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<DetailTransaksi> DetailTransaksis
		{
			get
			{
				return this.GetTable<DetailTransaksi>();
			}
		}
		
		public System.Data.Linq.Table<Jabatan> Jabatans
		{
			get
			{
				return this.GetTable<Jabatan>();
			}
		}
		
		public System.Data.Linq.Table<Kategori> Kategoris
		{
			get
			{
				return this.GetTable<Kategori>();
			}
		}
		
		public System.Data.Linq.Table<Layanan> Layanans
		{
			get
			{
				return this.GetTable<Layanan>();
			}
		}
		
		public System.Data.Linq.Table<Paket> Pakets
		{
			get
			{
				return this.GetTable<Paket>();
			}
		}
		
		public System.Data.Linq.Table<Pegawai> Pegawais
		{
			get
			{
				return this.GetTable<Pegawai>();
			}
		}
		
		public System.Data.Linq.Table<Pelanggan> Pelanggans
		{
			get
			{
				return this.GetTable<Pelanggan>();
			}
		}
		
		public System.Data.Linq.Table<Transaksi> Transaksis
		{
			get
			{
				return this.GetTable<Transaksi>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailPakets")]
	public partial class DetailPaket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PelangganId;
		
		private int _PaketId;
		
		private int _Harga;
		
		private System.DateTime _TanggalMulai;
		
		private System.DateTime _TanggalSelesai;
		
		private EntitySet<DetailTransaksi> _DetailTransaksis;
		
		private EntityRef<Paket> _Paket;
		
		private EntityRef<Pelanggan> _Pelanggan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPelangganIdChanging(int value);
    partial void OnPelangganIdChanged();
    partial void OnPaketIdChanging(int value);
    partial void OnPaketIdChanged();
    partial void OnHargaChanging(int value);
    partial void OnHargaChanged();
    partial void OnTanggalMulaiChanging(System.DateTime value);
    partial void OnTanggalMulaiChanged();
    partial void OnTanggalSelesaiChanging(System.DateTime value);
    partial void OnTanggalSelesaiChanged();
    #endregion
		
		public DetailPaket()
		{
			this._DetailTransaksis = new EntitySet<DetailTransaksi>(new Action<DetailTransaksi>(this.attach_DetailTransaksis), new Action<DetailTransaksi>(this.detach_DetailTransaksis));
			this._Paket = default(EntityRef<Paket>);
			this._Pelanggan = default(EntityRef<Pelanggan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PelangganId", DbType="Int NOT NULL")]
		public int PelangganId
		{
			get
			{
				return this._PelangganId;
			}
			set
			{
				if ((this._PelangganId != value))
				{
					if (this._Pelanggan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPelangganIdChanging(value);
					this.SendPropertyChanging();
					this._PelangganId = value;
					this.SendPropertyChanged("PelangganId");
					this.OnPelangganIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaketId", DbType="Int NOT NULL")]
		public int PaketId
		{
			get
			{
				return this._PaketId;
			}
			set
			{
				if ((this._PaketId != value))
				{
					if (this._Paket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaketIdChanging(value);
					this.SendPropertyChanging();
					this._PaketId = value;
					this.SendPropertyChanged("PaketId");
					this.OnPaketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Harga", DbType="Int NOT NULL")]
		public int Harga
		{
			get
			{
				return this._Harga;
			}
			set
			{
				if ((this._Harga != value))
				{
					this.OnHargaChanging(value);
					this.SendPropertyChanging();
					this._Harga = value;
					this.SendPropertyChanged("Harga");
					this.OnHargaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalMulai", DbType="DateTime NOT NULL")]
		public System.DateTime TanggalMulai
		{
			get
			{
				return this._TanggalMulai;
			}
			set
			{
				if ((this._TanggalMulai != value))
				{
					this.OnTanggalMulaiChanging(value);
					this.SendPropertyChanging();
					this._TanggalMulai = value;
					this.SendPropertyChanged("TanggalMulai");
					this.OnTanggalMulaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalSelesai", DbType="DateTime NOT NULL")]
		public System.DateTime TanggalSelesai
		{
			get
			{
				return this._TanggalSelesai;
			}
			set
			{
				if ((this._TanggalSelesai != value))
				{
					this.OnTanggalSelesaiChanging(value);
					this.SendPropertyChanging();
					this._TanggalSelesai = value;
					this.SendPropertyChanged("TanggalSelesai");
					this.OnTanggalSelesaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetailPaket_DetailTransaksi", Storage="_DetailTransaksis", ThisKey="Id", OtherKey="DetailPaketId")]
		public EntitySet<DetailTransaksi> DetailTransaksis
		{
			get
			{
				return this._DetailTransaksis;
			}
			set
			{
				this._DetailTransaksis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paket_DetailPaket", Storage="_Paket", ThisKey="PaketId", OtherKey="Id", IsForeignKey=true)]
		public Paket Paket
		{
			get
			{
				return this._Paket.Entity;
			}
			set
			{
				Paket previousValue = this._Paket.Entity;
				if (((previousValue != value) 
							|| (this._Paket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paket.Entity = null;
						previousValue.DetailPakets.Remove(this);
					}
					this._Paket.Entity = value;
					if ((value != null))
					{
						value.DetailPakets.Add(this);
						this._PaketId = value.Id;
					}
					else
					{
						this._PaketId = default(int);
					}
					this.SendPropertyChanged("Paket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pelanggan_DetailPaket", Storage="_Pelanggan", ThisKey="PelangganId", OtherKey="Id", IsForeignKey=true)]
		public Pelanggan Pelanggan
		{
			get
			{
				return this._Pelanggan.Entity;
			}
			set
			{
				Pelanggan previousValue = this._Pelanggan.Entity;
				if (((previousValue != value) 
							|| (this._Pelanggan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pelanggan.Entity = null;
						previousValue.DetailPakets.Remove(this);
					}
					this._Pelanggan.Entity = value;
					if ((value != null))
					{
						value.DetailPakets.Add(this);
						this._PelangganId = value.Id;
					}
					else
					{
						this._PelangganId = default(int);
					}
					this.SendPropertyChanged("Pelanggan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailTransaksis(DetailTransaksi entity)
		{
			this.SendPropertyChanging();
			entity.DetailPaket = this;
		}
		
		private void detach_DetailTransaksis(DetailTransaksi entity)
		{
			this.SendPropertyChanging();
			entity.DetailPaket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Units")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nama;
		
		private EntitySet<Layanan> _Layanans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNamaChanging(string value);
    partial void OnNamaChanged();
    #endregion
		
		public Unit()
		{
			this._Layanans = new EntitySet<Layanan>(new Action<Layanan>(this.attach_Layanans), new Action<Layanan>(this.detach_Layanans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nama
		{
			get
			{
				return this._Nama;
			}
			set
			{
				if ((this._Nama != value))
				{
					this.OnNamaChanging(value);
					this.SendPropertyChanging();
					this._Nama = value;
					this.SendPropertyChanged("Nama");
					this.OnNamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Layanan", Storage="_Layanans", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<Layanan> Layanans
		{
			get
			{
				return this._Layanans;
			}
			set
			{
				this._Layanans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Layanans(Layanan entity)
		{
			this.SendPropertyChanging();
			entity.Unit = this;
		}
		
		private void detach_Layanans(Layanan entity)
		{
			this.SendPropertyChanging();
			entity.Unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailTransaksis")]
	public partial class DetailTransaksi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TransaksiId;
		
		private System.Nullable<int> _LayananId;
		
		private System.Nullable<int> _DetailPaketId;
		
		private int _HargaUnit;
		
		private System.Nullable<int> _TotalUnit;
		
		private System.Nullable<System.DateTime> _TanggalSelesai;
		
		private EntityRef<DetailPaket> _DetailPaket;
		
		private EntityRef<Layanan> _Layanan;
		
		private EntityRef<Transaksi> _Transaksi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTransaksiIdChanging(string value);
    partial void OnTransaksiIdChanged();
    partial void OnLayananIdChanging(System.Nullable<int> value);
    partial void OnLayananIdChanged();
    partial void OnDetailPaketIdChanging(System.Nullable<int> value);
    partial void OnDetailPaketIdChanged();
    partial void OnHargaUnitChanging(int value);
    partial void OnHargaUnitChanged();
    partial void OnTotalUnitChanging(System.Nullable<int> value);
    partial void OnTotalUnitChanged();
    partial void OnTanggalSelesaiChanging(System.Nullable<System.DateTime> value);
    partial void OnTanggalSelesaiChanged();
    #endregion
		
		public DetailTransaksi()
		{
			this._DetailPaket = default(EntityRef<DetailPaket>);
			this._Layanan = default(EntityRef<Layanan>);
			this._Transaksi = default(EntityRef<Transaksi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransaksiId", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TransaksiId
		{
			get
			{
				return this._TransaksiId;
			}
			set
			{
				if ((this._TransaksiId != value))
				{
					if (this._Transaksi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransaksiIdChanging(value);
					this.SendPropertyChanging();
					this._TransaksiId = value;
					this.SendPropertyChanged("TransaksiId");
					this.OnTransaksiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LayananId", DbType="Int")]
		public System.Nullable<int> LayananId
		{
			get
			{
				return this._LayananId;
			}
			set
			{
				if ((this._LayananId != value))
				{
					if (this._Layanan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLayananIdChanging(value);
					this.SendPropertyChanging();
					this._LayananId = value;
					this.SendPropertyChanged("LayananId");
					this.OnLayananIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailPaketId", DbType="Int")]
		public System.Nullable<int> DetailPaketId
		{
			get
			{
				return this._DetailPaketId;
			}
			set
			{
				if ((this._DetailPaketId != value))
				{
					if (this._DetailPaket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailPaketIdChanging(value);
					this.SendPropertyChanging();
					this._DetailPaketId = value;
					this.SendPropertyChanged("DetailPaketId");
					this.OnDetailPaketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HargaUnit", DbType="Int NOT NULL")]
		public int HargaUnit
		{
			get
			{
				return this._HargaUnit;
			}
			set
			{
				if ((this._HargaUnit != value))
				{
					this.OnHargaUnitChanging(value);
					this.SendPropertyChanging();
					this._HargaUnit = value;
					this.SendPropertyChanged("HargaUnit");
					this.OnHargaUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUnit", DbType="Int")]
		public System.Nullable<int> TotalUnit
		{
			get
			{
				return this._TotalUnit;
			}
			set
			{
				if ((this._TotalUnit != value))
				{
					this.OnTotalUnitChanging(value);
					this.SendPropertyChanging();
					this._TotalUnit = value;
					this.SendPropertyChanged("TotalUnit");
					this.OnTotalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalSelesai", DbType="DateTime")]
		public System.Nullable<System.DateTime> TanggalSelesai
		{
			get
			{
				return this._TanggalSelesai;
			}
			set
			{
				if ((this._TanggalSelesai != value))
				{
					this.OnTanggalSelesaiChanging(value);
					this.SendPropertyChanging();
					this._TanggalSelesai = value;
					this.SendPropertyChanged("TanggalSelesai");
					this.OnTanggalSelesaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetailPaket_DetailTransaksi", Storage="_DetailPaket", ThisKey="DetailPaketId", OtherKey="Id", IsForeignKey=true)]
		public DetailPaket DetailPaket
		{
			get
			{
				return this._DetailPaket.Entity;
			}
			set
			{
				DetailPaket previousValue = this._DetailPaket.Entity;
				if (((previousValue != value) 
							|| (this._DetailPaket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DetailPaket.Entity = null;
						previousValue.DetailTransaksis.Remove(this);
					}
					this._DetailPaket.Entity = value;
					if ((value != null))
					{
						value.DetailTransaksis.Add(this);
						this._DetailPaketId = value.Id;
					}
					else
					{
						this._DetailPaketId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DetailPaket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Layanan_DetailTransaksi", Storage="_Layanan", ThisKey="LayananId", OtherKey="Id", IsForeignKey=true)]
		public Layanan Layanan
		{
			get
			{
				return this._Layanan.Entity;
			}
			set
			{
				Layanan previousValue = this._Layanan.Entity;
				if (((previousValue != value) 
							|| (this._Layanan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Layanan.Entity = null;
						previousValue.DetailTransaksis.Remove(this);
					}
					this._Layanan.Entity = value;
					if ((value != null))
					{
						value.DetailTransaksis.Add(this);
						this._LayananId = value.Id;
					}
					else
					{
						this._LayananId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Layanan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaksi_DetailTransaksi", Storage="_Transaksi", ThisKey="TransaksiId", OtherKey="Id", IsForeignKey=true)]
		public Transaksi Transaksi
		{
			get
			{
				return this._Transaksi.Entity;
			}
			set
			{
				Transaksi previousValue = this._Transaksi.Entity;
				if (((previousValue != value) 
							|| (this._Transaksi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaksi.Entity = null;
						previousValue.DetailTransaksis.Remove(this);
					}
					this._Transaksi.Entity = value;
					if ((value != null))
					{
						value.DetailTransaksis.Add(this);
						this._TransaksiId = value.Id;
					}
					else
					{
						this._TransaksiId = default(string);
					}
					this.SendPropertyChanged("Transaksi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jabatans")]
	public partial class Jabatan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nama;
		
		private EntitySet<Pegawai> _Pegawais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNamaChanging(string value);
    partial void OnNamaChanged();
    #endregion
		
		public Jabatan()
		{
			this._Pegawais = new EntitySet<Pegawai>(new Action<Pegawai>(this.attach_Pegawais), new Action<Pegawai>(this.detach_Pegawais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nama
		{
			get
			{
				return this._Nama;
			}
			set
			{
				if ((this._Nama != value))
				{
					this.OnNamaChanging(value);
					this.SendPropertyChanging();
					this._Nama = value;
					this.SendPropertyChanged("Nama");
					this.OnNamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jabatan_Pegawai", Storage="_Pegawais", ThisKey="Id", OtherKey="JabatanId")]
		public EntitySet<Pegawai> Pegawais
		{
			get
			{
				return this._Pegawais;
			}
			set
			{
				this._Pegawais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pegawais(Pegawai entity)
		{
			this.SendPropertyChanging();
			entity.Jabatan = this;
		}
		
		private void detach_Pegawais(Pegawai entity)
		{
			this.SendPropertyChanging();
			entity.Jabatan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategoris")]
	public partial class Kategori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nama;
		
		private EntitySet<Layanan> _Layanans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNamaChanging(string value);
    partial void OnNamaChanged();
    #endregion
		
		public Kategori()
		{
			this._Layanans = new EntitySet<Layanan>(new Action<Layanan>(this.attach_Layanans), new Action<Layanan>(this.detach_Layanans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nama
		{
			get
			{
				return this._Nama;
			}
			set
			{
				if ((this._Nama != value))
				{
					this.OnNamaChanging(value);
					this.SendPropertyChanging();
					this._Nama = value;
					this.SendPropertyChanged("Nama");
					this.OnNamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategori_Layanan", Storage="_Layanans", ThisKey="Id", OtherKey="KategoriId")]
		public EntitySet<Layanan> Layanans
		{
			get
			{
				return this._Layanans;
			}
			set
			{
				this._Layanans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Layanans(Layanan entity)
		{
			this.SendPropertyChanging();
			entity.Kategori = this;
		}
		
		private void detach_Layanans(Layanan entity)
		{
			this.SendPropertyChanging();
			entity.Kategori = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Layanans")]
	public partial class Layanan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nama;
		
		private System.Nullable<int> _KategoriId;
		
		private System.Nullable<int> _UnitId;
		
		private int _HargaUnit;
		
		private int _EstimastiDurasi;
		
		private EntitySet<DetailTransaksi> _DetailTransaksis;
		
		private EntitySet<Paket> _Pakets;
		
		private EntityRef<Kategori> _Kategori;
		
		private EntityRef<Unit> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNamaChanging(string value);
    partial void OnNamaChanged();
    partial void OnKategoriIdChanging(System.Nullable<int> value);
    partial void OnKategoriIdChanged();
    partial void OnUnitIdChanging(System.Nullable<int> value);
    partial void OnUnitIdChanged();
    partial void OnHargaUnitChanging(int value);
    partial void OnHargaUnitChanged();
    partial void OnEstimastiDurasiChanging(int value);
    partial void OnEstimastiDurasiChanged();
    #endregion
		
		public Layanan()
		{
			this._DetailTransaksis = new EntitySet<DetailTransaksi>(new Action<DetailTransaksi>(this.attach_DetailTransaksis), new Action<DetailTransaksi>(this.detach_DetailTransaksis));
			this._Pakets = new EntitySet<Paket>(new Action<Paket>(this.attach_Pakets), new Action<Paket>(this.detach_Pakets));
			this._Kategori = default(EntityRef<Kategori>);
			this._Unit = default(EntityRef<Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nama
		{
			get
			{
				return this._Nama;
			}
			set
			{
				if ((this._Nama != value))
				{
					this.OnNamaChanging(value);
					this.SendPropertyChanging();
					this._Nama = value;
					this.SendPropertyChanged("Nama");
					this.OnNamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategoriId", DbType="Int")]
		public System.Nullable<int> KategoriId
		{
			get
			{
				return this._KategoriId;
			}
			set
			{
				if ((this._KategoriId != value))
				{
					if (this._Kategori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKategoriIdChanging(value);
					this.SendPropertyChanging();
					this._KategoriId = value;
					this.SendPropertyChanged("KategoriId");
					this.OnKategoriIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int")]
		public System.Nullable<int> UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HargaUnit", DbType="Int NOT NULL")]
		public int HargaUnit
		{
			get
			{
				return this._HargaUnit;
			}
			set
			{
				if ((this._HargaUnit != value))
				{
					this.OnHargaUnitChanging(value);
					this.SendPropertyChanging();
					this._HargaUnit = value;
					this.SendPropertyChanged("HargaUnit");
					this.OnHargaUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimastiDurasi", DbType="Int NOT NULL")]
		public int EstimastiDurasi
		{
			get
			{
				return this._EstimastiDurasi;
			}
			set
			{
				if ((this._EstimastiDurasi != value))
				{
					this.OnEstimastiDurasiChanging(value);
					this.SendPropertyChanging();
					this._EstimastiDurasi = value;
					this.SendPropertyChanged("EstimastiDurasi");
					this.OnEstimastiDurasiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Layanan_DetailTransaksi", Storage="_DetailTransaksis", ThisKey="Id", OtherKey="LayananId")]
		public EntitySet<DetailTransaksi> DetailTransaksis
		{
			get
			{
				return this._DetailTransaksis;
			}
			set
			{
				this._DetailTransaksis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Layanan_Paket", Storage="_Pakets", ThisKey="Id", OtherKey="LayananId")]
		public EntitySet<Paket> Pakets
		{
			get
			{
				return this._Pakets;
			}
			set
			{
				this._Pakets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategori_Layanan", Storage="_Kategori", ThisKey="KategoriId", OtherKey="Id", IsForeignKey=true)]
		public Kategori Kategori
		{
			get
			{
				return this._Kategori.Entity;
			}
			set
			{
				Kategori previousValue = this._Kategori.Entity;
				if (((previousValue != value) 
							|| (this._Kategori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategori.Entity = null;
						previousValue.Layanans.Remove(this);
					}
					this._Kategori.Entity = value;
					if ((value != null))
					{
						value.Layanans.Add(this);
						this._KategoriId = value.Id;
					}
					else
					{
						this._KategoriId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategori");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Layanan", Storage="_Unit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public Unit Unit
		{
			get
			{
				return this._Unit.Entity;
			}
			set
			{
				Unit previousValue = this._Unit.Entity;
				if (((previousValue != value) 
							|| (this._Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unit.Entity = null;
						previousValue.Layanans.Remove(this);
					}
					this._Unit.Entity = value;
					if ((value != null))
					{
						value.Layanans.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailTransaksis(DetailTransaksi entity)
		{
			this.SendPropertyChanging();
			entity.Layanan = this;
		}
		
		private void detach_DetailTransaksis(DetailTransaksi entity)
		{
			this.SendPropertyChanging();
			entity.Layanan = null;
		}
		
		private void attach_Pakets(Paket entity)
		{
			this.SendPropertyChanging();
			entity.Layanan = this;
		}
		
		private void detach_Pakets(Paket entity)
		{
			this.SendPropertyChanging();
			entity.Layanan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pakets")]
	public partial class Paket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LayananId;
		
		private int _TotalUnit;
		
		private int _Harga;
		
		private EntitySet<DetailPaket> _DetailPakets;
		
		private EntityRef<Layanan> _Layanan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLayananIdChanging(int value);
    partial void OnLayananIdChanged();
    partial void OnTotalUnitChanging(int value);
    partial void OnTotalUnitChanged();
    partial void OnHargaChanging(int value);
    partial void OnHargaChanged();
    #endregion
		
		public Paket()
		{
			this._DetailPakets = new EntitySet<DetailPaket>(new Action<DetailPaket>(this.attach_DetailPakets), new Action<DetailPaket>(this.detach_DetailPakets));
			this._Layanan = default(EntityRef<Layanan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LayananId", DbType="Int NOT NULL")]
		public int LayananId
		{
			get
			{
				return this._LayananId;
			}
			set
			{
				if ((this._LayananId != value))
				{
					if (this._Layanan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLayananIdChanging(value);
					this.SendPropertyChanging();
					this._LayananId = value;
					this.SendPropertyChanged("LayananId");
					this.OnLayananIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUnit", DbType="Int NOT NULL")]
		public int TotalUnit
		{
			get
			{
				return this._TotalUnit;
			}
			set
			{
				if ((this._TotalUnit != value))
				{
					this.OnTotalUnitChanging(value);
					this.SendPropertyChanging();
					this._TotalUnit = value;
					this.SendPropertyChanged("TotalUnit");
					this.OnTotalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Harga", DbType="Int NOT NULL")]
		public int Harga
		{
			get
			{
				return this._Harga;
			}
			set
			{
				if ((this._Harga != value))
				{
					this.OnHargaChanging(value);
					this.SendPropertyChanging();
					this._Harga = value;
					this.SendPropertyChanged("Harga");
					this.OnHargaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paket_DetailPaket", Storage="_DetailPakets", ThisKey="Id", OtherKey="PaketId")]
		public EntitySet<DetailPaket> DetailPakets
		{
			get
			{
				return this._DetailPakets;
			}
			set
			{
				this._DetailPakets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Layanan_Paket", Storage="_Layanan", ThisKey="LayananId", OtherKey="Id", IsForeignKey=true)]
		public Layanan Layanan
		{
			get
			{
				return this._Layanan.Entity;
			}
			set
			{
				Layanan previousValue = this._Layanan.Entity;
				if (((previousValue != value) 
							|| (this._Layanan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Layanan.Entity = null;
						previousValue.Pakets.Remove(this);
					}
					this._Layanan.Entity = value;
					if ((value != null))
					{
						value.Pakets.Add(this);
						this._LayananId = value.Id;
					}
					else
					{
						this._LayananId = default(int);
					}
					this.SendPropertyChanged("Layanan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailPakets(DetailPaket entity)
		{
			this.SendPropertyChanging();
			entity.Paket = this;
		}
		
		private void detach_DetailPakets(DetailPaket entity)
		{
			this.SendPropertyChanging();
			entity.Paket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pegawais")]
	public partial class Pegawai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Nama;
		
		private string _Email;
		
		private string _Alamat;
		
		private string _NoTelp;
		
		private System.DateTime _TglLahir;
		
		private int _JabatanId;
		
		private EntitySet<Transaksi> _Transaksis;
		
		private EntityRef<Jabatan> _Jabatan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNamaChanging(string value);
    partial void OnNamaChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAlamatChanging(string value);
    partial void OnAlamatChanged();
    partial void OnNoTelpChanging(string value);
    partial void OnNoTelpChanged();
    partial void OnTglLahirChanging(System.DateTime value);
    partial void OnTglLahirChanged();
    partial void OnJabatanIdChanging(int value);
    partial void OnJabatanIdChanged();
    #endregion
		
		public Pegawai()
		{
			this._Transaksis = new EntitySet<Transaksi>(new Action<Transaksi>(this.attach_Transaksis), new Action<Transaksi>(this.detach_Transaksis));
			this._Jabatan = default(EntityRef<Jabatan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nama
		{
			get
			{
				return this._Nama;
			}
			set
			{
				if ((this._Nama != value))
				{
					this.OnNamaChanging(value);
					this.SendPropertyChanging();
					this._Nama = value;
					this.SendPropertyChanged("Nama");
					this.OnNamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alamat", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Alamat
		{
			get
			{
				return this._Alamat;
			}
			set
			{
				if ((this._Alamat != value))
				{
					this.OnAlamatChanging(value);
					this.SendPropertyChanging();
					this._Alamat = value;
					this.SendPropertyChanged("Alamat");
					this.OnAlamatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTelp", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NoTelp
		{
			get
			{
				return this._NoTelp;
			}
			set
			{
				if ((this._NoTelp != value))
				{
					this.OnNoTelpChanging(value);
					this.SendPropertyChanging();
					this._NoTelp = value;
					this.SendPropertyChanged("NoTelp");
					this.OnNoTelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TglLahir", DbType="Date NOT NULL")]
		public System.DateTime TglLahir
		{
			get
			{
				return this._TglLahir;
			}
			set
			{
				if ((this._TglLahir != value))
				{
					this.OnTglLahirChanging(value);
					this.SendPropertyChanging();
					this._TglLahir = value;
					this.SendPropertyChanged("TglLahir");
					this.OnTglLahirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JabatanId", DbType="Int NOT NULL")]
		public int JabatanId
		{
			get
			{
				return this._JabatanId;
			}
			set
			{
				if ((this._JabatanId != value))
				{
					if (this._Jabatan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJabatanIdChanging(value);
					this.SendPropertyChanging();
					this._JabatanId = value;
					this.SendPropertyChanged("JabatanId");
					this.OnJabatanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pegawai_Transaksi", Storage="_Transaksis", ThisKey="Id", OtherKey="PegawaiId")]
		public EntitySet<Transaksi> Transaksis
		{
			get
			{
				return this._Transaksis;
			}
			set
			{
				this._Transaksis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jabatan_Pegawai", Storage="_Jabatan", ThisKey="JabatanId", OtherKey="Id", IsForeignKey=true)]
		public Jabatan Jabatan
		{
			get
			{
				return this._Jabatan.Entity;
			}
			set
			{
				Jabatan previousValue = this._Jabatan.Entity;
				if (((previousValue != value) 
							|| (this._Jabatan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jabatan.Entity = null;
						previousValue.Pegawais.Remove(this);
					}
					this._Jabatan.Entity = value;
					if ((value != null))
					{
						value.Pegawais.Add(this);
						this._JabatanId = value.Id;
					}
					else
					{
						this._JabatanId = default(int);
					}
					this.SendPropertyChanged("Jabatan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transaksis(Transaksi entity)
		{
			this.SendPropertyChanging();
			entity.Pegawai = this;
		}
		
		private void detach_Transaksis(Transaksi entity)
		{
			this.SendPropertyChanging();
			entity.Pegawai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pelanggans")]
	public partial class Pelanggan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nama;
		
		private string _NoTelp;
		
		private string _Alamat;
		
		private EntitySet<DetailPaket> _DetailPakets;
		
		private EntitySet<Transaksi> _Transaksis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNamaChanging(string value);
    partial void OnNamaChanged();
    partial void OnNoTelpChanging(string value);
    partial void OnNoTelpChanged();
    partial void OnAlamatChanging(string value);
    partial void OnAlamatChanged();
    #endregion
		
		public Pelanggan()
		{
			this._DetailPakets = new EntitySet<DetailPaket>(new Action<DetailPaket>(this.attach_DetailPakets), new Action<DetailPaket>(this.detach_DetailPakets));
			this._Transaksis = new EntitySet<Transaksi>(new Action<Transaksi>(this.attach_Transaksis), new Action<Transaksi>(this.detach_Transaksis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nama", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nama
		{
			get
			{
				return this._Nama;
			}
			set
			{
				if ((this._Nama != value))
				{
					this.OnNamaChanging(value);
					this.SendPropertyChanging();
					this._Nama = value;
					this.SendPropertyChanged("Nama");
					this.OnNamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTelp", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NoTelp
		{
			get
			{
				return this._NoTelp;
			}
			set
			{
				if ((this._NoTelp != value))
				{
					this.OnNoTelpChanging(value);
					this.SendPropertyChanging();
					this._NoTelp = value;
					this.SendPropertyChanged("NoTelp");
					this.OnNoTelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alamat", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Alamat
		{
			get
			{
				return this._Alamat;
			}
			set
			{
				if ((this._Alamat != value))
				{
					this.OnAlamatChanging(value);
					this.SendPropertyChanging();
					this._Alamat = value;
					this.SendPropertyChanged("Alamat");
					this.OnAlamatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pelanggan_DetailPaket", Storage="_DetailPakets", ThisKey="Id", OtherKey="PelangganId")]
		public EntitySet<DetailPaket> DetailPakets
		{
			get
			{
				return this._DetailPakets;
			}
			set
			{
				this._DetailPakets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pelanggan_Transaksi", Storage="_Transaksis", ThisKey="Id", OtherKey="PelangganId")]
		public EntitySet<Transaksi> Transaksis
		{
			get
			{
				return this._Transaksis;
			}
			set
			{
				this._Transaksis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailPakets(DetailPaket entity)
		{
			this.SendPropertyChanging();
			entity.Pelanggan = this;
		}
		
		private void detach_DetailPakets(DetailPaket entity)
		{
			this.SendPropertyChanging();
			entity.Pelanggan = null;
		}
		
		private void attach_Transaksis(Transaksi entity)
		{
			this.SendPropertyChanging();
			entity.Pelanggan = this;
		}
		
		private void detach_Transaksis(Transaksi entity)
		{
			this.SendPropertyChanging();
			entity.Pelanggan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transaksis")]
	public partial class Transaksi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private int _PelangganId;
		
		private int _PegawaiId;
		
		private System.DateTime _TanggalTransaksi;
		
		private System.DateTime _EstimasiSelesai;
		
		private EntitySet<DetailTransaksi> _DetailTransaksis;
		
		private EntityRef<Pegawai> _Pegawai;
		
		private EntityRef<Pelanggan> _Pelanggan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnPelangganIdChanging(int value);
    partial void OnPelangganIdChanged();
    partial void OnPegawaiIdChanging(int value);
    partial void OnPegawaiIdChanged();
    partial void OnTanggalTransaksiChanging(System.DateTime value);
    partial void OnTanggalTransaksiChanged();
    partial void OnEstimasiSelesaiChanging(System.DateTime value);
    partial void OnEstimasiSelesaiChanged();
    #endregion
		
		public Transaksi()
		{
			this._DetailTransaksis = new EntitySet<DetailTransaksi>(new Action<DetailTransaksi>(this.attach_DetailTransaksis), new Action<DetailTransaksi>(this.detach_DetailTransaksis));
			this._Pegawai = default(EntityRef<Pegawai>);
			this._Pelanggan = default(EntityRef<Pelanggan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PelangganId", DbType="Int NOT NULL")]
		public int PelangganId
		{
			get
			{
				return this._PelangganId;
			}
			set
			{
				if ((this._PelangganId != value))
				{
					if (this._Pelanggan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPelangganIdChanging(value);
					this.SendPropertyChanging();
					this._PelangganId = value;
					this.SendPropertyChanged("PelangganId");
					this.OnPelangganIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PegawaiId", DbType="Int NOT NULL")]
		public int PegawaiId
		{
			get
			{
				return this._PegawaiId;
			}
			set
			{
				if ((this._PegawaiId != value))
				{
					if (this._Pegawai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPegawaiIdChanging(value);
					this.SendPropertyChanging();
					this._PegawaiId = value;
					this.SendPropertyChanged("PegawaiId");
					this.OnPegawaiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TanggalTransaksi", DbType="DateTime NOT NULL")]
		public System.DateTime TanggalTransaksi
		{
			get
			{
				return this._TanggalTransaksi;
			}
			set
			{
				if ((this._TanggalTransaksi != value))
				{
					this.OnTanggalTransaksiChanging(value);
					this.SendPropertyChanging();
					this._TanggalTransaksi = value;
					this.SendPropertyChanged("TanggalTransaksi");
					this.OnTanggalTransaksiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimasiSelesai", DbType="DateTime NOT NULL")]
		public System.DateTime EstimasiSelesai
		{
			get
			{
				return this._EstimasiSelesai;
			}
			set
			{
				if ((this._EstimasiSelesai != value))
				{
					this.OnEstimasiSelesaiChanging(value);
					this.SendPropertyChanging();
					this._EstimasiSelesai = value;
					this.SendPropertyChanged("EstimasiSelesai");
					this.OnEstimasiSelesaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaksi_DetailTransaksi", Storage="_DetailTransaksis", ThisKey="Id", OtherKey="TransaksiId")]
		public EntitySet<DetailTransaksi> DetailTransaksis
		{
			get
			{
				return this._DetailTransaksis;
			}
			set
			{
				this._DetailTransaksis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pegawai_Transaksi", Storage="_Pegawai", ThisKey="PegawaiId", OtherKey="Id", IsForeignKey=true)]
		public Pegawai Pegawai
		{
			get
			{
				return this._Pegawai.Entity;
			}
			set
			{
				Pegawai previousValue = this._Pegawai.Entity;
				if (((previousValue != value) 
							|| (this._Pegawai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pegawai.Entity = null;
						previousValue.Transaksis.Remove(this);
					}
					this._Pegawai.Entity = value;
					if ((value != null))
					{
						value.Transaksis.Add(this);
						this._PegawaiId = value.Id;
					}
					else
					{
						this._PegawaiId = default(int);
					}
					this.SendPropertyChanged("Pegawai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pelanggan_Transaksi", Storage="_Pelanggan", ThisKey="PelangganId", OtherKey="Id", IsForeignKey=true)]
		public Pelanggan Pelanggan
		{
			get
			{
				return this._Pelanggan.Entity;
			}
			set
			{
				Pelanggan previousValue = this._Pelanggan.Entity;
				if (((previousValue != value) 
							|| (this._Pelanggan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pelanggan.Entity = null;
						previousValue.Transaksis.Remove(this);
					}
					this._Pelanggan.Entity = value;
					if ((value != null))
					{
						value.Transaksis.Add(this);
						this._PelangganId = value.Id;
					}
					else
					{
						this._PelangganId = default(int);
					}
					this.SendPropertyChanged("Pelanggan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailTransaksis(DetailTransaksi entity)
		{
			this.SendPropertyChanging();
			entity.Transaksi = this;
		}
		
		private void detach_DetailTransaksis(DetailTransaksi entity)
		{
			this.SendPropertyChanging();
			entity.Transaksi = null;
		}
	}
}
#pragma warning restore 1591
